name: Deploy
inputs:
- {name: project, type: String}
- {name: location, type: String}
- {name: serving_container_uri, type: String}
- {name: display_name, type: String}
- {name: artifact_uri, type: String}
implementation:
  container:
    image: python:3.8
    command:
    - sh
    - -c
    - |2

      if ! [ -x "$(command -v pip)" ]; then
          python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip
      fi

      PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet     --no-warn-script-location 'google-cloud-aiplatform' 'joblib' 'sklearn' 'google-cloud-bigquery' 'kfp==1.8.10' && "$0" "$@"
    - sh
    - -ec
    - |
      program_path=$(mktemp -d)
      printf "%s" "$0" > "$program_path/ephemeral_component.py"
      python3 -m kfp.v2.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"
    - "\nimport kfp\nfrom kfp.v2 import dsl\nfrom kfp.v2.dsl import *\nfrom typing\
      \ import *\n\ndef deploy(\n    project: str,\n    location: str,\n    serving_container_uri:\
      \ str,\n    display_name:str,\n    artifact_uri:str, \n):\n    from google.cloud\
      \ import aiplatform\n    import os\n\n    aiplatform.init(project=project)\n\
      \n    deployed_model = aiplatform.Model.upload(\n        display_name= display_name,\n\
      \        artifact_uri = artifact_uri,\n        serving_container_image_uri=\
      \ serving_container_uri\n    )\n    endpoint = deployed_model.deploy(\n    \
      \    traffic_split={\"0\": 100},\n        machine_type=\"n1-standard-4\"\n \
      \   )\n\n"
    args:
    - --executor_input
    - {executorInput: null}
    - --function_to_execute
    - deploy
